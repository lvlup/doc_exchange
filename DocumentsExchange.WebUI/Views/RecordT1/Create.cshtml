@using DocumentsExchange.DataLayer.Entity
@using DocumentsExchange.Common.Extensions;  
@model DocumentsExchange.DataLayer.Entity.RecordT1

@*@using (Ajax.BeginForm("Create", new AjaxOptions { UpdateTargetId = "results" }))*@
@using (Html.BeginForm("Create", "RecordT1", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "AddRecord1Form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            <label class="col-sm-2 control-label">Дата отправки:</label>
            <div class="col-sm-10">
                <div class="input-group datepicker">
                    @*@Html.EditorFor(p => p.CreatedDateTime, new {@class = "form-control ", tabindex = 1})*@
                    @Html.TextBoxFor(model => model.CreatedDateTime, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    @Html.ValidationMessageFor(p => p.CreatedDateTime, null, new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Наименование отправителя:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.OrganizationSender, new { @class = "form-control", tabindex = 2 })
                @Html.ValidationMessageFor(p => p.OrganizationSender, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Отправитель:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.SenderUser.FirstName, new { @class = "form-control", tabindex = 3 })
                @Html.ValidationMessageFor(p => p.SenderUser.FirstName, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-10" tabindex="4">
                <input type="file" name="upload" id="uploadFileBtn"/>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">П/П №</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.NumberPaymentOrder, new { @class = "form-control", tabindex = 5, Value = ""})
                @Html.ValidationMessageFor(model => model.NumberPaymentOrder, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Наименование получателя:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.OrganizationReceiver, new { @class = "form-control", tabindex = 6 })
                @Html.ValidationMessageFor(model => model.OrganizationReceiver, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Сумма:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.Amount, new { @class = "form-control", tabindex = 7, Value = "" })
                @Html.ValidationMessageFor(model => model.Amount, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Валюта:</label>
            <div class="col-sm-10">
                @*@Html.TextBoxFor(p => p.Currency, new { @class = "form-control", tabindex = 8 })*@

                @Html.DropDownListFor(m => m.Currency,
                    new SelectList(Enum.GetValues(typeof(Currency))),
                    null,new { @class = "form-control", tabindex = 8 , @id="currencyDropDown", data_url = Url.Action("GetCurrency") })
                @Html.ValidationMessageFor(model => model.Currency, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Курс:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.Course, new { @class = "form-control", tabindex = 9,  @id = "currentCourse", Value = "" })
                @Html.ValidationMessageFor(model => model.Course, null, new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <label class="col-sm-2 control-label">Сумма в указанной валюте:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.AmountInCurrency, new { @class = "form-control", tabindex = 1 })
                @Html.ValidationMessageFor(model => model.AmountInCurrency, null, new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label class="col-sm-2 control-label">Процент:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.Percent, new { @class = "form-control", tabindex = 10, Value = "" })
                @Html.ValidationMessageFor(model => model.Percent, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Swift:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.Swift, new { @class = "form-control", tabindex = 11, Value = "" })
                @Html.ValidationMessageFor(model => model.Swift, null, new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            <label class="col-sm-2 control-label">Отправлено:</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.Sent, new { @class = "form-control", tabindex = 1 })
                @Html.ValidationMessageFor(model => model.Sent, null, new { @class = "text-danger" })
            </div>
        </div>*@

        @*@Html.HiddenFor(model => model.OranizationId)
        @Html.HiddenFor(model => model.CategoryId)*@

       

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-default" id="addRecord1Btn">Добавить запись</button>
            </div>
        </div>

    </div>
}

<script type="text/javascript">
        $(function() {
            $('.datepicker').datetimepicker(
            {
                locale: 'ru',
                format: 'DD.MM.YYYY'
            });

            $('#currencyDropDown').change(function () {
                var selectedId = $(this).val();
                var act = '@Url.Action("GetCurrency")';

                switch (selectedId)
                {
                    case 'Usd':
                        $.get(
                           {
                               url: $(this).data("url"),
                               data: { currency:  '@Currency.Usd' }
                           }).done(function (data) {
                               $('#currentCourse').val(data);
                           }).fail(function (jqXhr, textStatus) {
                               alert("Something went wrong: " + textStatus + ".");
                           });
                        break;
                    case 'Euro':
                        console.log('В точку!');
                        break;
                    case 'Rub':
                        console.log('Перебор');
                        break;
                }

            }).change();

            $("#addRecord1Btn").click(function (e) {
                var dataArray = $(this).closest("form").serializeArray();
                var act = '@Url.Action("Create","RecordT1")';
                e.preventDefault();

                var files = $('#uploadFileBtn')[0].files;
                if (files.length > 0)
                {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }


                    dataArray.forEach(function (item) {
                        data.append(item.name, item.value);
                    });

                    $.ajax({
                        type: "POST",
                        url: act,
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (data) {
                            $("#tabContent").html(data);
                        },
                        error: function (xhr, status, p3) {
                            alert(xhr.responseText);
                        }
                    });
                }
            });
        });
</script>